<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="file:///F|/SAMPEX/pawno/xml/pawndoc.xsl" type="text/xsl"?>
<doc source="F:\SAMPEX\pawno\include\github_repo\gamemodes\Sa-mpEx.pwn">
	<assembly>
		<name>Sa-mpEx.pwn</name>
	</assembly>

	<!-- general -->
	<general>
		MySQL plugin @MYSQL_PLUGIN_VERSION@ 
	</general>

	<members>

		<!-- enumerations -->

		<!-- constants -->
		<member name="C:cellmax" value="2147483647">
			<referrer name="operator!(Float:)"/>
		</member>
		<member name="C:cellmin" value="-2147483648">
			<referrer name="operator-(Float:)"/>
		</member>
		<member name="C:false" value="0">
			<tagname value="bool"/>
			<referrer name="sampex_create"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_isintset"/>
			<referrer name="sampex_textfilecopy"/>
			<referrer name="sampex_unset"/>
			<referrer name="InitFly"/>
			<referrer name="StartFly"/>
			<referrer name="Fly"/>
			<referrer name="StopFly"/>
			<referrer name="big_map_objects"/>
			<referrer name="middlesized_map_objects"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<referrer name="OnAccountLoad"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
		</member>
		<member name="C:true" value="1">
			<tagname value="bool"/>
			<referrer name="sampex_create"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_getint"/>
			<referrer name="sampex_isintset"/>
			<referrer name="sampex_textfilecopy"/>
			<referrer name="sampex_unset"/>
			<referrer name="StartFly"/>
			<referrer name="StopFly"/>
			<referrer name="big_map_objects"/>
			<referrer name="middlesized_map_objects"/>
			<referrer name="sampex_commandperformed"/>
			<referrer name="OnPlayerConnect"/>
		</member>

		<!-- variables -->
		<member name="F:Flying">
			<tagname value="bool"/>
		</member>
		<member name="F:OnFly">
			<tagname value="bool"/>
			<referrer name="InitFly"/>
			<referrer name="StartFly"/>
			<referrer name="Fly"/>
			<referrer name="StopFly"/>
		</member>
		<member name="F:__date">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__time">
		</member>
		<member name="F:gSQLHandle">
			<tagname value="MySQL"/>
			<referrer name="OnPlayerCheck"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnGameModeExit"/>
		</member>
		<member name="F:g_MysqlRaceCheck">
			<referrer name="OnPlayerCheck"/>
			<referrer name="OnMySQLResponse"/>
		</member>
		<member name="F:sampex_login_string">
			<referrer name="OnMySQLResponse"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<referrer name="OnPlayerPasswordChecked"/>
		</member>
		<member name="F:sampex_login_title">
			<referrer name="OnMySQLResponse"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<referrer name="OnPlayerPasswordChecked"/>
		</member>
		<member name="F:sampex_loginfail">
			<referrer name="OnPlayerPasswordChecked"/>
		</member>
		<member name="F:sampex_register_string">
			<referrer name="OnMySQLResponse"/>
		</member>
		<member name="F:sampex_register_title">
			<referrer name="OnMySQLResponse"/>
		</member>
		<member name="F:sampex_scmd_e">
			<tagname value="bool"/>
			<referrer name="scmd_gminit"/>
			<referrer name="sampex_onplayercommandtext"/>
		</member>
		<member name="F:sampex_scmd_s">
			<tagname value="bool"/>
			<referrer name="scmd_gminit"/>
			<referrer name="sampex_onplayercommandtext"/>
		</member>
		<member name="F:sampex_sql_db">
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="F:sampex_sql_host">
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="F:sampex_sql_pw">
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="F:sampex_sql_user">
			<referrer name="OnGameModeInit"/>
		</member>
		<member name="F:sampex_version">
			<referrer name="sampex_getversion"/>
			<referrer name="sampex_reglogload"/>
			<referrer name="sampex_okay"/>
		</member>
		<member name="F:versiondata">
			<referrer name="sampex_getversion"/>
		</member>

		<!-- functions -->
		<member name="M:operator!(Float:)" syntax="operator!(Float:)(oper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="cellmax"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(_:,Float:)" syntax="operator%(_:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(Float:,_:)" syntax="operator%(Float:,_:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator%(Float:,Float:)" syntax="operator%(Float:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Float:,_:)" syntax="operator!=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator!=(Float:,Float:)" syntax="operator!=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(_:,Float:)" syntax="operator-(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,_:)" syntax="operator-(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator+(Float:,_:)" syntax="operator+(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatadd"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator/(_:,Float:)" syntax="operator/(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,_:)" syntax="operator/(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator*(Float:,_:)" syntax="operator*(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="sampex_setnegative"/>
			<dependency name="float"/>
			<dependency name="floatmul"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator++(Float:)" syntax="operator++(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:)" syntax="operator-(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator--(Float:)" syntax="operator--(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,Float:)" syntax="operator-(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator--(Float:)"/>
			<referrer name="sampex_setnegative"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(Float:,Float:)" syntax="operator+(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator++(Float:)"/>
			<referrer name="StartFly"/>
			<referrer name="Fly"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,Float:)" syntax="operator/(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="Fly"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(Float:,Float:)" syntax="operator*(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="sampex_setpositive"/>
			<referrer name="Fly"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Float:operator=(_:)" syntax="Float:operator=(_:)(oper)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="sampex_playertdcreate"/>
			<referrer name="sampex_setpositive"/>
			<referrer name="sampex_setnegative"/>
			<param name="oper">
			</param>
		</member>
		<member name="M:operator==(Float:,Float:)" syntax="operator==(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="Fly"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,_:)" syntax="operator==(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="sampex_setpositive"/>
			<referrer name="sampex_setnegative"/>
			<referrer name="Fly"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(Float:,Float:)" syntax="operator&gt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;(Float:,_:)" syntax="operator&gt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="sampex_setpositive"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(_:,Float:)" syntax="operator&gt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,Float:)" syntax="operator&gt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="SetPlayerLookAt"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,_:)" syntax="operator&gt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;=(_:,Float:)" syntax="operator&gt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,Float:)" syntax="operator&lt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="SetPlayerLookAt"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,_:)" syntax="operator&lt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="sampex_setnegative"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;(_:,Float:)" syntax="operator&lt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,Float:)" syntax="operator&lt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="SetPlayerLookAt"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,_:)" syntax="operator&lt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;=(_:,Float:)" syntax="operator&lt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:@receivepacket" syntax="@receivepacket(packet[], size, source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="packet">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@receivestring" syntax="@receivestring(message[], source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ApplyAnimation" syntax="ApplyAnimation(playerid, animlib[], animname[], fDelta, loop, lockx, locky, freeze, time, forcesync)">
			<attribute name="native"/>
			<referrer name="StartFly"/>
			<referrer name="Fly"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fDelta">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="loop">
			</param>
			<param name="lockx">
			</param>
			<param name="locky">
			</param>
			<param name="freeze">
			</param>
			<param name="time">
			</param>
			<param name="forcesync">
			</param>
		</member>
		<member name="M:CallLocalFunction" syntax="CallLocalFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="scmd_gminit"/>
			<referrer name="sampex_onplayercommandtext"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CreateDynamicObject" syntax="CreateDynamicObject()">
			<stacksize value="1"/>
			<referrer name="sampex_createdynamicobject"/>
		</member>
		<member name="M:CreatePlayerTextDraw" syntax="CreatePlayerTextDraw(playerid, x, y, text[])">
			<tagname value="PlayerText"/>
			<attribute name="native"/>
			<referrer name="sampex_playertdcreate"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Fly" syntax="Fly(playerid)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<referrer name="StartFly"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerCameraFrontVector"/>
			<dependency name="GetPlayerCameraPos"/>
			<dependency name="GetPlayerKeys"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="OnFly"/>
			<dependency name="SetPlayerLookAt"/>
			<dependency name="SetPlayerVelocity"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GameTextForAll" syntax="GameTextForAll(string[], time, style)">
			<attribute name="native"/>
			<referrer name="sampex_gametextforall"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
		</member>
		<member name="M:GameTextForPlayer" syntax="GameTextForPlayer(playerid, string[], time, style)">
			<attribute name="native"/>
			<referrer name="sampex_gametextforplayer"/>
			<referrer name="StartFly"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
		</member>
		<member name="M:GetPlayerAnimationIndex" syntax="GetPlayerAnimationIndex(playerid)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerCameraFrontVector" syntax="GetPlayerCameraFrontVector(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerCameraPos" syntax="GetPlayerCameraPos(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerKeys" syntax="GetPlayerKeys(playerid, &amp;keys, &amp;updown, &amp;leftright)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<param name="playerid">
			</param>
			<param name="keys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="updown">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="leftright">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerName" syntax="GetPlayerName(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="sampex_pname"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayerPos" syntax="GetPlayerPos(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="StartFly"/>
			<referrer name="StopFly"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:InitFly" syntax="InitFly(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="OnFly"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerConnected" syntax="IsPlayerConnected(playerid)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<referrer name="sampex_commandreceived"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Kick" syntax="Kick(playerid)">
			<attribute name="native"/>
			<referrer name="OnMySQLResponse"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnAccountLoad" syntax="OnAccountLoad(playerid)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<referrer name="OnPlayerPasswordChecked"/>
			<dependency name="SetSpawnInfo"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnActorStreamIn" syntax="OnActorStreamIn(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnActorStreamOut" syntax="OnActorStreamOut(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnDialogResponse" syntax="OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="322"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="bcrypt_hash"/>
			<dependency name="bcrypt_verify"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="cache_unset_active"/>
			<dependency name="gSQLHandle"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_query"/>
			<dependency name="sampex_info"/>
			<dependency name="sampex_pname"/>
			<dependency name="sampex_pname"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnEnterExitModShop" syntax="OnEnterExitModShop(playerid, enterexit, interiorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="enterexit">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:OnFilterScriptExit" syntax="OnFilterScriptExit()">
			<stacksize value="1"/>
		</member>
		<member name="M:OnFilterScriptInit" syntax="OnFilterScriptInit()">
			<stacksize value="1"/>
		</member>
		<member name="M:OnGameModeExit" syntax="OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="gSQLHandle"/>
			<dependency name="mysql_close"/>
		</member>
		<member name="M:OnGameModeInit" syntax="OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="SendRconCommand"/>
			<dependency name="false"/>
			<dependency name="gSQLHandle"/>
			<dependency name="mysql_connect"/>
			<dependency name="mysql_errno"/>
			<dependency name="mysql_query"/>
			<dependency name="random"/>
			<dependency name="sampex_checkver"/>
			<dependency name="sampex_error"/>
			<dependency name="sampex_info"/>
			<dependency name="sampex_sql_db"/>
			<dependency name="sampex_sql_db"/>
			<dependency name="sampex_sql_host"/>
			<dependency name="sampex_sql_host"/>
			<dependency name="sampex_sql_pw"/>
			<dependency name="sampex_sql_pw"/>
			<dependency name="sampex_sql_user"/>
			<dependency name="sampex_sql_user"/>
		</member>
		<member name="M:OnIncomingConnection" syntax="OnIncomingConnection(playerid, ip_address[], port)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="port">
			</param>
		</member>
		<member name="M:OnMySQLResponse" syntax="OnMySQLResponse(playerid, race_check)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Kick"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="cache_num_rows"/>
			<dependency name="g_MysqlRaceCheck"/>
			<dependency name="random"/>
			<dependency name="sampex_login_string"/>
			<dependency name="sampex_login_string"/>
			<dependency name="sampex_login_title"/>
			<dependency name="sampex_login_title"/>
			<dependency name="sampex_register_string"/>
			<dependency name="sampex_register_string"/>
			<dependency name="sampex_register_title"/>
			<dependency name="sampex_register_title"/>
			<param name="playerid">
			</param>
			<param name="race_check">
			</param>
		</member>
		<member name="M:OnObjectMoved" syntax="OnObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerCheck" syntax="OnPlayerCheck(playerid)">
			<attribute name="public"/>
			<stacksize value="136"/>
			<dependency name="gSQLHandle"/>
			<dependency name="g_MysqlRaceCheck"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="sampex_pname"/>
			<dependency name="sampex_pname"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerClickMap" syntax="OnPlayerClickMap(playerid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickPlayer" syntax="OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedplayerid">
			</param>
			<param name="source">
			</param>
		</member>
		<member name="M:OnPlayerClickPlayerTextDraw" syntax="OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickTextDraw" syntax="OnPlayerClickTextDraw(playerid, clickedid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandText" syntax="OnPlayerCommandText(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerConnect" syntax="OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="false"/>
			<dependency name="sampex_info"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerDeath" syntax="OnPlayerDeath(playerid, killerid, reason)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerDisconnect" syntax="OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerEditAttachedObject" syntax="OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="boneid">
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditObject" syntax="OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEnterCheckpoint" syntax="OnPlayerEnterCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterRaceCheckpoint" syntax="OnPlayerEnterRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterVehicle" syntax="OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:OnPlayerExitVehicle" syntax="OnPlayerExitVehicle(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnPlayerExitedMenu" syntax="OnPlayerExitedMenu(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamage" syntax="OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamageActor" syntax="OnPlayerGiveDamageActor(playerid, damaged_actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damaged_actorid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerInteriorChange" syntax="OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newinteriorid">
			</param>
			<param name="oldinteriorid">
			</param>
		</member>
		<member name="M:OnPlayerKeyStateChange" syntax="OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:OnPlayerLeaveCheckpoint" syntax="OnPlayerLeaveCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveRaceCheckpoint" syntax="OnPlayerLeaveRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerObjectMoved" syntax="OnPlayerObjectMoved(playerid, objectid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerPasswordChecked" syntax="OnPlayerPasswordChecked(playerid, success)">
			<attribute name="public"/>
			<stacksize value="310"/>
			<dependency name="OnAccountLoad"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="format"/>
			<dependency name="random"/>
			<dependency name="sampex_login_string"/>
			<dependency name="sampex_login_title"/>
			<dependency name="sampex_login_title"/>
			<dependency name="sampex_loginfail"/>
			<param name="playerid">
			</param>
			<param name="success">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerPasswordHashed" syntax="OnPlayerPasswordHashed(playerid)">
			<attribute name="public"/>
			<stacksize value="413"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="bcrypt_get_hash"/>
			<dependency name="false"/>
			<dependency name="gSQLHandle"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_query"/>
			<dependency name="random"/>
			<dependency name="sampex_login_string"/>
			<dependency name="sampex_login_string"/>
			<dependency name="sampex_login_title"/>
			<dependency name="sampex_login_title"/>
			<dependency name="sampex_pname"/>
			<dependency name="sampex_pname"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpPickup" syntax="OnPlayerPickUpPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerRequestClass" syntax="OnPlayerRequestClass(playerid, classid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:OnPlayerRequestSpawn" syntax="OnPlayerRequestSpawn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerSelectObject" syntax="OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectedMenuRow" syntax="OnPlayerSelectedMenuRow(playerid, row)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="row">
			</param>
		</member>
		<member name="M:OnPlayerSpawn" syntax="OnPlayerSpawn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerStateChange" syntax="OnPlayerStateChange(playerid, newstate, oldstate)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:OnPlayerStreamIn" syntax="OnPlayerStreamIn(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerStreamOut" syntax="OnPlayerStreamOut(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerTakeDamage" syntax="OnPlayerTakeDamage(playerid, issuerid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerText" syntax="OnPlayerText(playerid, text[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerUpdate" syntax="OnPlayerUpdate(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerWeaponShot" syntax="OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="hittype">
			</param>
			<param name="hitid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnQueryError" syntax="OnQueryError(errorid, error[], callback[], query[], handle)">
			<stacksize value="1"/>
			<param name="errorid">
			</param>
			<param name="error">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:OnRconCommand" syntax="OnRconCommand(cmd[])">
			<stacksize value="1"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnRconLoginAttempt" syntax="OnRconLoginAttempt(ip[], password[], success)">
			<stacksize value="1"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnTrailerUpdate" syntax="OnTrailerUpdate(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnUnoccupiedVehicleUpdate" syntax="OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, new_x, new_y, new_z, vel_x, vel_y, vel_z)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="passenger_seat">
			</param>
			<param name="new_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnVehicleDamageStatusUpdate" syntax="OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnVehicleDeath" syntax="OnVehicleDeath(vehicleid, killerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:OnVehicleMod" syntax="OnVehicleMod(playerid, vehicleid, componentid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:OnVehiclePaintjob" syntax="OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:OnVehicleRespray" syntax="OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:OnVehicleSirenStateChange" syntax="OnVehicleSirenStateChange(playerid, vehicleid, newstate)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="newstate">
			</param>
		</member>
		<member name="M:OnVehicleSpawn" syntax="OnVehicleSpawn(vehicleid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnVehicleStreamIn" syntax="OnVehicleStreamIn(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnVehicleStreamOut" syntax="OnVehicleStreamOut(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:PlayerTextDrawSetString" syntax="PlayerTextDrawSetString(playerid, text, string[])">
			<attribute name="native"/>
			<referrer name="sampex_playertdsetstring"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendClientMessage" syntax="SendClientMessage(playerid, color, message[])">
			<attribute name="native"/>
			<referrer name="sampex_sendclientmessage"/>
			<referrer name="sampex_commandperformed"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendClientMessageToAll" syntax="SendClientMessageToAll(color, message[])">
			<attribute name="native"/>
			<referrer name="sampex_sendclientmessagetoall"/>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendRconCommand" syntax="SendRconCommand(command[])">
			<attribute name="native"/>
			<referrer name="OnGameModeInit"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerFacingAngle" syntax="SetPlayerFacingAngle(playerid, ang)">
			<attribute name="native"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="playerid">
			</param>
			<param name="ang">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerLookAt" syntax="SetPlayerLookAt(playerid, x, y)">
			<stacksize value="9"/>
			<referrer name="Fly"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="atan"/>
			<dependency name="floatabs"/>
			<dependency name="floatadd"/>
			<dependency name="floatsub"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerPos" syntax="SetPlayerPos(playerid, x, y, z)">
			<attribute name="native"/>
			<referrer name="StartFly"/>
			<referrer name="StopFly"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerVelocity" syntax="SetPlayerVelocity(playerid, X, Y, Z)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<param name="playerid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetSpawnInfo" syntax="SetSpawnInfo(playerid, team, skin, x, y, z, rotation, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)">
			<attribute name="native"/>
			<referrer name="OnAccountLoad"/>
			<param name="playerid">
			</param>
			<param name="team">
			</param>
			<param name="skin">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon1_ammo">
			</param>
			<param name="weapon2">
			</param>
			<param name="weapon2_ammo">
			</param>
			<param name="weapon3">
			</param>
			<param name="weapon3_ammo">
			</param>
		</member>
		<member name="M:SetTimerEx" syntax="SetTimerEx(funcname[], interval, repeating, format[], ...)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<referrer name="OnPlayerConnect"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:ShowPlayerDialog" syntax="ShowPlayerDialog(playerid, dialogid, style, caption[], info[], button1[], button2[])">
			<attribute name="native"/>
			<referrer name="OnMySQLResponse"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<referrer name="OnPlayerPasswordChecked"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="style">
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="info">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:StartFly" syntax="StartFly(playerid)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="Fly"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="OnFly"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StopFly" syntax="StopFly(playerid)">
			<tagname value="bool"/>
			<stacksize value="9"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="OnFly"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TextDrawCreate" syntax="TextDrawCreate(x, y, text[])">
			<tagname value="Text"/>
			<attribute name="native"/>
			<referrer name="sampex_globaltdcreate"/>
			<referrer name="sampex_playertdcreate"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawSetString" syntax="TextDrawSetString(text, string[])">
			<attribute name="native"/>
			<referrer name="sampex_globaltdsetstring"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TogglePlayerSpectating" syntax="TogglePlayerSpectating(playerid, toggle)">
			<attribute name="native"/>
			<referrer name="OnAccountLoad"/>
			<referrer name="OnPlayerConnect"/>
			<param name="playerid">
			</param>
			<param name="toggle">
			</param>
		</member>
		<member name="M:atan" syntax="atan(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:bcrypt_get_hash" syntax="bcrypt_get_hash(hash[], size)">
			<attribute name="native"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<param name="hash">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:bcrypt_hash" syntax="bcrypt_hash(playerid, callback[], input[], cost, args[], ...)">
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="input">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="cost">
			</param>
			<param name="args">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:bcrypt_verify" syntax="bcrypt_verify(playerid, callback[], input[], hash[])">
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="input">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="hash">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:big_map_objects" syntax="big_map_objects(id)">
			<stacksize value="1"/>
			<referrer name="sampex_createdynamicobject"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="id">
			</param>
		</member>
		<member name="M:cache_get_field_count" syntax="cache_get_field_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_fields"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_result_count" syntax="cache_get_result_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_results"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_row_count" syntax="cache_get_row_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_rows"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name" syntax="cache_get_value_name(row_idx, column_name[], destination[], max_len)">
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
		</member>
		<member name="M:cache_num_fields" syntax="cache_num_fields()">
			<stacksize value="4"/>
			<dependency name="cache_get_field_count"/>
		</member>
		<member name="M:cache_num_results" syntax="cache_num_results()">
			<stacksize value="4"/>
			<dependency name="cache_get_result_count"/>
		</member>
		<member name="M:cache_num_rows" syntax="cache_num_rows()">
			<stacksize value="4"/>
			<referrer name="OnMySQLResponse"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="cache_get_row_count"/>
		</member>
		<member name="M:cache_unset_active" syntax="cache_unset_active()">
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="M:fclose" syntax="fclose(handle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="sampex_create"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_getint"/>
			<referrer name="sampex_isintset"/>
			<referrer name="sampex_textfilecopy"/>
			<referrer name="sampex_unset"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:fexist" syntax="fexist(pattern[])">
			<attribute name="native"/>
			<referrer name="sampex_create"/>
			<referrer name="sampex_dofileexist"/>
			<referrer name="sampex_textfilecopy"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:float" syntax="float(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="value">
			</param>
		</member>
		<member name="M:floatabs" syntax="floatabs(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatadd" syntax="floatadd(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcmp" syntax="floatcmp(oper1, oper2)">
			<attribute name="native"/>
			<referrer name="operator==(Float:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,Float:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,Float:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatdiv" syntax="floatdiv(dividend, divisor)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<param name="dividend">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="divisor">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatmul" syntax="floatmul(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatsqroot" syntax="floatsqroot(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="sampex_setpositive"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatstr" syntax="floatstr(string[])">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="sampex_float"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:floatsub" syntax="floatsub(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:fopen" syntax="fopen(name[], mode)">
			<tagname value="File"/>
			<attribute name="native"/>
			<referrer name="sampex_create"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_getint"/>
			<referrer name="sampex_isintset"/>
			<referrer name="sampex_textfilecopy"/>
			<referrer name="sampex_unset"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>filemode </paraminfo>
			</param>
		</member>
		<member name="M:format" syntax="format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="sampex_reglogload"/>
			<referrer name="sampex_okay"/>
			<referrer name="sampex_sendclientmessage"/>
			<referrer name="sampex_sendclientmessagetoall"/>
			<referrer name="sampex_globaltdcreate"/>
			<referrer name="sampex_playertdcreate"/>
			<referrer name="sampex_globaltdsetstring"/>
			<referrer name="sampex_playertdsetstring"/>
			<referrer name="sampex_gametextforplayer"/>
			<referrer name="sampex_gametextforall"/>
			<referrer name="sampex_setfloat"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_setint"/>
			<referrer name="sampex_textfilecopy"/>
			<referrer name="sampex_unset"/>
			<referrer name="sampex_error"/>
			<referrer name="sampex_info"/>
			<referrer name="sampex_setpositive"/>
			<referrer name="sampex_setnegative"/>
			<referrer name="OnPlayerPasswordChecked"/>
			<referrer name="sampex_onplayercommandtext"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:fread" syntax="fread(handle, string[], size, pack)">
			<attribute name="native"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_getint"/>
			<referrer name="sampex_isintset"/>
			<referrer name="sampex_textfilecopy"/>
			<referrer name="sampex_unset"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:fremove" syntax="fremove(name[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="sampex_remove"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_unset"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:funcidx" syntax="funcidx(name[])">
			<attribute name="native"/>
			<referrer name="scmd_gminit"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:fwrite" syntax="fwrite(handle, string[])">
			<attribute name="native"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_textfilecopy"/>
			<referrer name="sampex_unset"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:main" syntax="main()">
			<attribute name="entry"/>
			<stacksize value="3"/>
			<dependency name="print"/>
		</member>
		<member name="M:middlesized_map_objects" syntax="middlesized_map_objects(id)">
			<stacksize value="1"/>
			<referrer name="sampex_createdynamicobject"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="id">
			</param>
		</member>
		<member name="M:mysql_close" syntax="mysql_close(handle)">
			<attribute name="native"/>
			<referrer name="OnGameModeExit"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_connect" syntax="mysql_connect(host[], user[], password[], database[], option_id)">
			<tagname value="MySQL"/>
			<attribute name="native"/>
			<referrer name="OnGameModeInit"/>
			<param name="host">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="user">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="database">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="option_id">
				<paraminfo>MySQLOpt </paraminfo>
			</param>
		</member>
		<member name="M:mysql_errno" syntax="mysql_errno(handle)">
			<attribute name="native"/>
			<referrer name="OnGameModeInit"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_format" syntax="mysql_format(handle, output[], max_len, format[], ...)">
			<attribute name="native"/>
			<referrer name="OnPlayerCheck"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<referrer name="OnDialogResponse"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {MySQL,Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:mysql_log" syntax="mysql_log(loglevel)">
			<stacksize value="1"/>
			<param name="loglevel">
				<paraminfo>E_LOGLEVEL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_query" syntax="mysql_query(handle, query[], use_cache)">
			<tagname value="Cache"/>
			<attribute name="native"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnDialogResponse"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="use_cache">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:mysql_tquery" syntax="mysql_tquery(handle, query[], callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="OnPlayerCheck"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {MySQL,Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:onpc" syntax="onpc()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="sampex_reglogload"/>
		</member>
		<member name="M:print" syntax="print(string[])">
			<attribute name="native"/>
			<referrer name="sampex_reglogload"/>
			<referrer name="sampex_okay"/>
			<referrer name="sampex_different"/>
			<referrer name="sampex_nulled"/>
			<referrer name="sampex_unk"/>
			<referrer name="sampex_un"/>
			<referrer name="sampex_unset"/>
			<referrer name="sampex_error"/>
			<referrer name="sampex_info"/>
			<referrer name="main"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:printf" syntax="printf(format[], ...)">
			<attribute name="native"/>
			<referrer name="sampex_reglogload"/>
			<referrer name="sampex_okay"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:random" syntax="random(max)">
			<attribute name="native"/>
			<referrer name="OnMySQLResponse"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<referrer name="OnPlayerPasswordChecked"/>
			<referrer name="OnGameModeInit"/>
			<param name="max">
			</param>
		</member>
		<member name="M:sampex_antideamx" syntax="sampex_antideamx()">
			<stacksize value="26"/>
		</member>
		<member name="M:sampex_boolean" syntax="sampex_boolean(filename[], key[])">
			<stacksize value="5"/>
			<dependency name="sampex_getint"/>
			<dependency name="strval"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_checkver" syntax="sampex_checkver()">
			<stacksize value="3"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="sampex_different"/>
			<dependency name="sampex_getversion"/>
			<dependency name="sampex_nulled"/>
			<dependency name="sampex_okay"/>
			<dependency name="sampex_unk"/>
		</member>
		<member name="M:sampex_commandperformed" syntax="sampex_commandperformed(playerid, cmdtext[], success)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:sampex_commandreceived" syntax="sampex_commandreceived(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="IsPlayerConnected"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_create" syntax="sampex_create(filename[])">
			<stacksize value="5"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="io_write"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_createdynamicobject" syntax="sampex_createdynamicobject(objid, x, y, z, rx, ry, rz, worldid, interiorid, playerid, streamdistance, drawdistance, areaid, priority)">
			<stacksize value="17"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="big_map_objects"/>
			<dependency name="middlesized_map_objects"/>
			<param name="objid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:sampex_different" syntax="sampex_different()">
			<stacksize value="3"/>
			<referrer name="sampex_checkver"/>
			<dependency name="print"/>
		</member>
		<member name="M:sampex_dofileexist" syntax="sampex_dofileexist(filename[])">
			<stacksize value="3"/>
			<dependency name="fexist"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_error" syntax="sampex_error(str[])">
			<stacksize value="306"/>
			<referrer name="sampex_setpositive"/>
			<referrer name="sampex_setnegative"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="format"/>
			<dependency name="print"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_float" syntax="sampex_float(filename[], key[])">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<dependency name="floatstr"/>
			<dependency name="sampex_getint"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_gametextforall" syntax="sampex_gametextforall(sampex_message_string[], duration, style, ...)">
			<stacksize value="5"/>
			<dependency name="GameTextForAll"/>
			<dependency name="format"/>
			<param name="sampex_message_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="duration">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sampex_gametextforplayer" syntax="sampex_gametextforplayer(i, sampex_message_string[], duration, style, ...)">
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="format"/>
			<param name="i">
			</param>
			<param name="sampex_message_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="duration">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sampex_getint" syntax="sampex_getint(filename[], key[])">
			<stacksize value="264"/>
			<referrer name="sampex_float"/>
			<referrer name="sampex_boolean"/>
			<referrer name="sampex_integner"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="fread"/>
			<dependency name="io_read"/>
			<dependency name="sampex_getint"/>
			<dependency name="sampex_linestrip"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_getversion" syntax="sampex_getversion()">
			<stacksize value="1"/>
			<referrer name="sampex_checkver"/>
			<dependency name="sampex_version"/>
			<dependency name="versiondata"/>
		</member>
		<member name="M:sampex_getweaponslot" syntax="sampex_getweaponslot(weaponid)">
			<stacksize value="2"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:sampex_globaltdcreate" syntax="sampex_globaltdcreate(x, y, sampex_message_string[], ...)">
			<stacksize value="5"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="format"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sampex_message_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sampex_globaltdsetstring" syntax="sampex_globaltdsetstring(id, sampex_message_string[], ...)">
			<stacksize value="4"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="format"/>
			<param name="id">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="sampex_message_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sampex_info" syntax="sampex_info(str[])">
			<stacksize value="306"/>
			<referrer name="sampex_setpositive"/>
			<referrer name="sampex_setnegative"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="format"/>
			<dependency name="print"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_integner" syntax="sampex_integner(filename[], key[])">
			<stacksize value="5"/>
			<dependency name="sampex_getint"/>
			<dependency name="strval"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_isintset" syntax="sampex_isintset(filename[], key[])">
			<stacksize value="263"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="fread"/>
			<dependency name="io_read"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_linestrip" syntax="sampex_linestrip(string[])">
			<stacksize value="4"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_getint"/>
			<referrer name="sampex_textfilecopy"/>
			<referrer name="sampex_unset"/>
			<dependency name="strlen"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_nulled" syntax="sampex_nulled()">
			<stacksize value="3"/>
			<referrer name="sampex_checkver"/>
			<dependency name="print"/>
		</member>
		<member name="M:sampex_okay" syntax="sampex_okay()">
			<stacksize value="16"/>
			<referrer name="sampex_checkver"/>
			<dependency name="format"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="sampex_version"/>
		</member>
		<member name="M:sampex_onplayercommandtext" syntax="sampex_onplayercommandtext(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="75"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="format"/>
			<dependency name="sampex_scmd_e"/>
			<dependency name="sampex_scmd_s"/>
			<dependency name="tolower"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_playertdcreate" syntax="sampex_playertdcreate(i, x, y, sampex_message_string[], ...)">
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="format"/>
			<param name="i">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="sampex_message_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sampex_playertdsetstring" syntax="sampex_playertdsetstring(i, id, sampex_message_string[], ...)">
			<stacksize value="5"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="format"/>
			<param name="i">
			</param>
			<param name="id">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="sampex_message_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sampex_pname" syntax="sampex_pname(id)">
			<stacksize value="29"/>
			<referrer name="OnPlayerCheck"/>
			<referrer name="OnPlayerPasswordHashed"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="sampexcmd_test"/>
			<dependency name="GetPlayerName"/>
			<dependency name="sampex_pname"/>
			<param name="id">
			</param>
		</member>
		<member name="M:sampex_reglogload" syntax="sampex_reglogload()">
			<stacksize value="16"/>
			<referrer name="onpc"/>
			<dependency name="format"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="sampex_version"/>
		</member>
		<member name="M:sampex_remove" syntax="sampex_remove(filename[])">
			<stacksize value="3"/>
			<dependency name="fremove"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_sendclientmessage" syntax="sampex_sendclientmessage(p_id, color, sampex_message_string[], ...)">
			<stacksize value="5"/>
			<referrer name="sampexcmd_test"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<param name="p_id">
			</param>
			<param name="color">
			</param>
			<param name="sampex_message_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sampex_sendclientmessagetoall" syntax="sampex_sendclientmessagetoall(color, sampex_message_string[], ...)">
			<stacksize value="4"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="format"/>
			<param name="color">
			</param>
			<param name="sampex_message_string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sampex_set" syntax="sampex_set(filename[], key[], value[])">
			<stacksize value="267"/>
			<referrer name="sampex_setfloat"/>
			<referrer name="sampex_setboolean"/>
			<referrer name="sampex_setint"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="format"/>
			<dependency name="fread"/>
			<dependency name="fremove"/>
			<dependency name="fwrite"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<dependency name="sampex_linestrip"/>
			<dependency name="sampex_textfilecopy"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_setboolean" syntax="sampex_setboolean(filename[], key[], value)">
			<stacksize value="6"/>
			<dependency name="sampex_set"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:sampex_setfloat" syntax="sampex_setfloat(filename[], key[], value)">
			<stacksize value="261"/>
			<dependency name="format"/>
			<dependency name="sampex_set"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:sampex_setint" syntax="sampex_setint(filename[], key[], value)">
			<stacksize value="261"/>
			<dependency name="format"/>
			<dependency name="sampex_set"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:sampex_setnegative" syntax="sampex_setnegative(num)">
			<tagname value="Float"/>
			<stacksize value="137"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="format"/>
			<dependency name="sampex_error"/>
			<dependency name="sampex_info"/>
			<param name="num">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:sampex_setpositive" syntax="sampex_setpositive(num)">
			<tagname value="Float"/>
			<stacksize value="137"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="floatsqroot"/>
			<dependency name="format"/>
			<dependency name="sampex_error"/>
			<dependency name="sampex_info"/>
			<param name="num">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:sampex_textfilecopy" syntax="sampex_textfilecopy(oldname[], newname[])">
			<stacksize value="263"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_unset"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="format"/>
			<dependency name="fread"/>
			<dependency name="fwrite"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<dependency name="sampex_linestrip"/>
			<dependency name="true"/>
			<param name="oldname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="newname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampex_un" syntax="sampex_un()">
			<stacksize value="3"/>
			<dependency name="print"/>
		</member>
		<member name="M:sampex_unk" syntax="sampex_unk()">
			<stacksize value="3"/>
			<referrer name="sampex_checkver"/>
			<dependency name="print"/>
		</member>
		<member name="M:sampex_unset" syntax="sampex_unset(filename[], key[])">
			<stacksize value="264"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="format"/>
			<dependency name="fread"/>
			<dependency name="fremove"/>
			<dependency name="fwrite"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<dependency name="print"/>
			<dependency name="sampex_linestrip"/>
			<dependency name="sampex_textfilecopy"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="key">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sampexcmd_test" syntax="sampexcmd_test(playerid, strings[])">
			<attribute name="public"/>
			<stacksize value="32"/>
			<dependency name="sampex_pname"/>
			<dependency name="sampex_pname"/>
			<dependency name="sampex_sendclientmessage"/>
			<param name="playerid">
			</param>
			<param name="strings">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:scmd_gminit" syntax="scmd_gminit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="funcidx"/>
			<dependency name="sampex_scmd_e"/>
			<dependency name="sampex_scmd_s"/>
		</member>
		<member name="M:strcmp" syntax="strcmp(string1[], string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_getint"/>
			<referrer name="sampex_isintset"/>
			<referrer name="sampex_unset"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strlen" syntax="strlen(string[])">
			<attribute name="native"/>
			<referrer name="sampex_set"/>
			<referrer name="sampex_getint"/>
			<referrer name="sampex_isintset"/>
			<referrer name="sampex_unset"/>
			<referrer name="sampex_linestrip"/>
			<referrer name="OnDialogResponse"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strmid" syntax="strmid(dest[], source[], start, end, maxlength)">
			<attribute name="native"/>
			<referrer name="sampex_getint"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strval" syntax="strval(string[])">
			<attribute name="native"/>
			<referrer name="sampex_boolean"/>
			<referrer name="sampex_integner"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:tolower" syntax="tolower(c)">
			<attribute name="native"/>
			<referrer name="sampex_onplayercommandtext"/>
			<param name="c">
			</param>
		</member>

	</members>
</doc>
